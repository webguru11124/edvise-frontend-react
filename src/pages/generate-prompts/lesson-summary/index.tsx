/* eslint-disable react/no-danger */
import { FC, Fragment, useEffect, useRef, useState } from 'react';
import { PromptNoteContained } from 'Components/Icons';
import { Button } from 'Components/Button';
import { ArrowBack, Delete, Edit, MoreVert } from '@mui/icons-material';
import { Popover, Transition } from '@headlessui/react';
import { classNames } from 'Utils/index';
import Tiptap from 'Components/TiptapEditor/TiptapEditor';
import { PromptCommonProps } from '../generate-prompts.interface';

enum Status {
  VIEW,
  EDIT
}

const defaultTitle =
  'What are the main types of machine learning algorithms, and how are they used in practice?';
const defaultContent = `Supervised learning: This is where the machine learning model is trained on a labeled dataset, where the correct output is known for each input. The algorithm learns to map input data to the correct output based on the provided training data. Supervised learning algorithms are commonly used for tasks such as classification, regression, and prediction.
Unsupervised learning: This is where the machine learning model is trained on an unlabeled dataset, where the correct output is not known. The algorithm learns to find patterns and structure in the data, without being given specific guidance on what to look for. Unsupervised learning algorithms are commonly used for tasks such as clustering,
Unsupervised learning: This is where the machine learning model is trained on an unlabeled dataset, where the correct output is not known. The algorithm learns to find patterns and structure in the data, without being given specific guidance on what to look for. Unsupervised learning algorithms are commonly used for tasks such as clustering,
Unsupervised learning: This is where the machine learning model is trained on an unlabeled dataset, where the correct output is not known. The algorithm learns to find patterns and structure in the data, without being given specific guidance on what to look for. Unsupervised learning algorithms are commonly used for tasks such as clustering,
Unsupervised learning: This is where the machine learning model is trained on an unlabeled dataset, where the correct output is not known. The algorithm learns to find patterns and structure in the data, without being given specific guidance on what to look for. Unsupervised learning algorithms are commonly used for tasks such as clustering,
Supervised learning: This is where the machine learning model is trained on a labeled dataset, where the correct output is known for each input. The algorithm learns to map input data to the correct output based on the provided training data. Supervised learning algorithms are commonly used for tasks such as classification, regression, and prediction.
Unsupervised learning: This is where the machine learning model is trained on an unlabeled dataset, where the correct output is not known. The algorithm learns to find patterns and structure in the data, without being given specific guidance on what to look for. Unsupervised learning algorithms are commonly used for tasks such as clustering,`;

const LessonSummary: FC<PromptCommonProps> = ({ onBackToSelectPage }) => {
  const [content, setContent] = useState(defaultContent);
  const titleRef = useRef<HTMLDivElement>(null);
  const [mode, setMode] = useState<Status>(Status.VIEW);

  useEffect(() => {
    if (mode === Status.EDIT) titleRef?.current?.focus();
  }, [mode]);

  return (
    <div className='w-full justify-center flex'>
      <div className='w-[800px] mb-8 xl:2xl:mt-20 lg:mt-8 md:mt-8'>
        <div className='border-b border-slate-200 w-full pb-4 flex'>
          <div className='w-full flex items-center'>
            <div className='mr-6'>
              <PromptNoteContained />
            </div>
            <div>
              <h3 className='font-bold text-slate-800 text-2xl'>
                Lesson Summary
              </h3>
              <h4 className='mt-1 text-slate-500'>
                This is the summary generated by AI
              </h4>
            </div>
          </div>
          <div className='ml-auto relative flex justify-center items-center'>
            {mode === Status.VIEW && (
              <Popover className='relative'>
                <Popover.Button className='outline-none text-neutral-600 hover:text-neutral-900 active:text-neutral-500 cursor-pointer'>
                  <MoreVert />
                </Popover.Button>
                <Transition
                  as={Fragment}
                  enter='transition ease-out duration-200'
                  enterFrom='opacity-0 translate-y-1'
                  enterTo='opacity-100 translate-y-0'
                  leave='transition ease-in duration-150'
                  leaveFrom='opacity-100 translate-y-0'
                  leaveTo='opacity-0 translate-y-1'
                >
                  <Popover.Panel className='absolute right-0 top-[100%] w-[150px] py-1 z-10 bg-white shadow-sm shadow-gray-300 rounded-md'>
                    {({ close }) => (
                      <div className='w-full'>
                        <button
                          className='w-full text-sm text-neutral-500 flex items-center hover:text-neutral-600 active:text-neutral-500 hover:bg-gray-200 px-4 py-1'
                          onClick={() => {
                            setMode(Status.EDIT);
                            close();
                          }}
                        >
                          <Edit className='mr-3' />
                          <h3>Edit</h3>
                        </button>
                        <button
                          className='w-full text-sm text-neutral-500 flex items-center hover:text-neutral-600 active:text-neutral-500 hover:bg-gray-200 px-4 py-1 text-red-500'
                          onClick={() => {
                            close();
                          }}
                        >
                          <Delete className='mr-3' />
                          <h3>Delete</h3>
                        </button>
                      </div>
                    )}
                  </Popover.Panel>
                </Transition>
              </Popover>
            )}
          </div>
        </div>

        <div className='w-full mt-9 pb-8'>
          <div
            className={classNames(
              'break-normal outline-none rounded-lg',
              mode === Status.EDIT
                ? 'text-base border-slate-200 border px-4 py-2'
                : 'text-3xl'
            )}
            contentEditable={mode === Status.EDIT}
            ref={titleRef}
          >
            {defaultTitle}
          </div>
        </div>

        {mode === Status.EDIT ? (
          <div>
            <Tiptap
              value={content}
              onChange={(val) => {
                setContent(val);
              }}
            />
          </div>
        ) : (
          <div className='text-slate-400 max-h-[350px] h-[350px] overflow-auto scrollbar-hide relative'>
            <div dangerouslySetInnerHTML={{ __html: content }} />
            <div className='w-full sticky bottom-0 h-[100px] left-0 bg-gradient-to-t from-white' />
          </div>
        )}

        <div className='flex'>
          {mode === Status.EDIT ? (
            <div className='ml-auto mt-2 flex gap-2'>
              <Button
                text='Cancel'
                color='secondary'
                onClick={() => {
                  setMode(Status.VIEW);
                }}
              />
              <Button
                text='Save'
                onClick={() => {
                  setMode(Status.VIEW);
                }}
              />
            </div>
          ) : (
            <div className='mt-4 flex w-full'>
              <Button
                color='secondary'
                text='Back'
                icon={<ArrowBack />}
                onClick={onBackToSelectPage}
              />
              <Button
                color='primary'
                text='Confirm & Upload'
                className='ml-auto'
              />
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default LessonSummary;
